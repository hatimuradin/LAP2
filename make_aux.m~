function [graph_nodes, PF_aux, PF_indexes, PF_inputs] = make_aux(clique, adj, PF)
    % Pairwise 
    graph_nodes = clique;
    PF_aux = cell();
    PF_inputs = cell();
    
    k=1;
    for v1=1:length(clique)
        PF_aux{k} = @(vertex, w, x) w*x(vertex);
        PF_inputs{k} = x(v1);
        k = k+1;
        for v2=v1:length(clique)
            PF_aux{k} = @(vertex1, vertex2, w, x) w*x(vertex1)*x(vertex2);
            PF_inputs{k} = [x(v1), x(v2)];
            k = k+1;
        end
    end
    
    
    for v1=1:length(clique)
        for ii=1:size(adj,1)
            if (   adj(ii, vertex) == 1 && isempty(find(clique == ii , 1)) )
                % add 1-neighbours to graph_nodes of aux graph 
                graph_nodes = [graph_nodes, ii];
                   
                % checks if the clique is not part of main PFs add it to
                % PF_aux
                PF_aux{k} = @(v1, v2, w, x) w*x(v1)             
             end
        end  % finding 1-neighbour of each node of clique
    end  % entire clique
           
       
    % Dense
    
    
    % Exact

end